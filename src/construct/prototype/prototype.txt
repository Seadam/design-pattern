原型模式是指实例指定创建对象种类,并且通过复制这些原型创建新的对象
适用于:
1 类初始化消耗资源较多
2 使用new生成一个对象需要非常复杂的过程(数据准备 访问权限等)
3 构造函数比较复杂
4 在循环体中产生大量对象

浅克隆:
克隆对象属性的引用地址与原来对象的属性引用地址相同,意味着复制的不是值,而是引用的地址
这样的话,如果我们修改任意一个对象属性值,则其他克隆对象的属性值也会跟着改变.
浅克隆只是完整复制了值类型数据,没有赋值引用对象
换言之,所有的引用对象任然转向原来的对象,显然这不是我们想要的结果.

深克隆:
实现序列化接口,cloneable接口,并自定义重写clone方法;
深克隆会破坏单例模式,可以通过重写clone方法返回单例对象解决;

